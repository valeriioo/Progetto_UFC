/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.mycompany._megaprogetto_galifivalerio;

import java.util.ArrayList;
import java.time.LocalDateTime;
import java.io.Serializable;

public class Torneo implements Serializable{
    private static final long serialVersionUID = 1L;
    private String nomeTorneo;
    private Match[] elencoMatch;
    private final int numMaxAtleti = 20;
    private int numeroDiMatch;
    private LocalDateTime orarioTorneo;

    public Torneo(String nomeTorneo, int numeroDiMatch) {
        this.nomeTorneo = nomeTorneo;
        this.numeroDiMatch = numeroDiMatch;
        this.elencoMatch = new Match[numeroDiMatch];
        this.orarioTorneo = LocalDateTime.now(); // Imposta l'orario del torneo come l'orario attuale
    }

    public LocalDateTime getOrarioTorneo() {
        return orarioTorneo;
    }

    public String getNomeTorneo() {
        return nomeTorneo;
    }

    public void setNomeTorneo(String nomeTorneo) {
        this.nomeTorneo = nomeTorneo;
    }

    public Match[] getElencoMatch() {
        return elencoMatch;
    }

    public void setElencoMatch(Match[] elencoMatch) {
        this.elencoMatch = elencoMatch;
    }

    public int getNumeroDiMatch() {
        return numeroDiMatch;
    }

    public void setNumeroDiMatch(int numeroDiMatch) {
        this.numeroDiMatch = numeroDiMatch;
    }

    public void aggiungiMatch(int indice, Match match) {
        if (indice >= 0 && indice < numeroDiMatch) {
            elencoMatch[indice] = match;
        } else {
            System.out.println("Indice non valido per aggiungere il match.");
        }
    }
       @Override
    public String toString() {
        String result = "Torneo{" +
                "nomeTorneo='" + nomeTorneo + '\'' +
                ", elencoMatch=[";
        for (int i = 0; i < elencoMatch.length; i++) {
            if (i > 0) {
                result += ", ";
            }
            result += elencoMatch[i];
        }
        result += "], numMaxAtleti=" + numMaxAtleti +
                ", numeroDiMatch=" + numeroDiMatch +
                '}';
        return result;
        
    }
}


















/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.mycompany._megaprogetto_galifivalerio;

import java.util.ArrayList;

public class Match {
    private int numeroMatch;
    private int numeroRound;
    private String classeDiPeso;
    private String fighter1;
    private String fighter2;
    private double premioAtleta;

    public Match(int numeroMatch, int numeroRound, String classeDiPeso, String fighter1, String fighter2) {
        this.numeroMatch = numeroMatch;
        if (numeroRound == 3 || numeroRound == 5) {
            this.numeroRound = numeroRound;
        } else {
            throw new IllegalArgumentException("Il numero di round deve essere 3 o 5.");
        }
        this.classeDiPeso = classeDiPeso;
        this.fighter1 = fighter1;
        this.fighter2 = fighter2;
        this.premioAtleta = 0; // Premio inizializzato a 0, verrà aggiornato in seguito
    }

    public int getNumeroMatch() {
        return numeroMatch;
    }

    public int getNumeroRound() {
        return numeroRound;
    }

    public String getClasseDiPeso() {
        return classeDiPeso;
    }

    public String getFighter1() {
        return fighter1;
    }

    public String getFighter2() {
        return fighter2;
    }

    public double getPremioAtleta() {
        return premioAtleta;
    }

    public void setPremioAtleta(double premioAtleta) {
        this.premioAtleta = premioAtleta;
    }

    @Override
    public String toString() {
        return "Match{" +
                "numeroMatch=" + numeroMatch +
                ", numeroRound=" + numeroRound +
                ", classeDiPeso='" + classeDiPeso + '\'' +
                ", fighter1='" + fighter1 + '\'' +
                ", fighter2='" + fighter2 + '\'' +
                ", premioAtleta=" + premioAtleta +
                '}';
    }
}


























/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 */

package com.mycompany._megaprogetto_galifivalerio;

import java.util.InputMismatchException;
import java.util.Scanner;
import java.io.IOException;
import java.util.Scanner;


public class App {
    public static void main(String[] args) {
        Scanner tastiera = new Scanner(System.in);

        // Creazione di un nuovo torneo
        Torneo t1 = new Torneo("Torneo di Test", 3);
        System.out.println("Orario del torneo: " + t1.getOrarioTorneo() + " (orario attuale)");

        // Creazione di alcuni match con inserimento dei nomi dei fighters
        System.out.println("Inserisci i nomi dei fighters per ogni match:");
        for (int i = 1; i <= 3; i++) {
            System.out.println("Match " + i + ":");
            System.out.println("\n");
            System.out.print("Nome del primo fighter: ");
            String fighter1 = tastiera.nextLine();
            System.out.print("Nome del secondo fighter: ");
            String fighter2 = tastiera.nextLine();
            int numeroRound = 0;
            boolean inputCorretto = false;
           
        while (true) {
                try {
                    System.out.print("Numero di round (3 o 5): ");
                    numeroRound = Integer.parseInt(tastiera.nextLine());
                    if (numeroRound != 3 && numeroRound != 5) {
                        throw new RoundException("Il numero di round deve essere 3 o 5.");
                    }
                    break;
                } catch (NumberFormatException e) {
                    System.out.println("Inserisci un numero valido.");
                } catch (RoundException e) {
                    System.out.println(e.getMessage());
                }
            }

            System.out.print("Classe di peso: ");
            String classeDiPeso = tastiera.nextLine();

            Match match = new Match(i, numeroRound, classeDiPeso, fighter1, fighter2);
            t1.aggiungiMatch(i - 1, match);
        }

        // Richiesta all'utente di inserire il vincitore e il premio per ciascun match
        // Richiesta all'utente di inserire il vincitore e il premio per ciascun match
          // Richiesta all'utente di inserire il vincitore e il premio per ciascun match
        for (Match match : t1.getElencoMatch()) {
            boolean inputCorretto = false;
            do {
                System.out.println("Inserisci il vincitore per il match " + match.getNumeroMatch() + ":");
                String vincitore = tastiera.nextLine();
                // Controllo se il vincitore è uno dei fighters
                if (!vincitore.equals(match.getFighter1()) && !vincitore.equals(match.getFighter2())) {
                    System.out.println("Il nome inserito non corrisponde a nessun fighter. Riprova.");
                } else {
                    System.out.println("Inserisci il premio per il vincitore " + vincitore + ":");
                    double premio = 0;
                    try {
                        premio = Double.parseDouble(tastiera.nextLine());
                        match.setPremioAtleta(premio);
                        inputCorretto = true;
                    } catch (NumberFormatException e) {
                        System.out.println("Input non valido per il premio. Riprova.");
                    }
                }
            } while (!inputCorretto);
        }
         // Serializzazione del torneo
        String filePath = "torneo.ser";
        try {
            SerializationUtil.serializeObject(t1, filePath);
            System.out.println("Torneo serializzato con successo.");
        } catch (IOException e) {
            System.out.println("Errore durante la serializzazione del torneo: " + e.getMessage());
        }

        // Deserializzazione del torneo
        try {
            Torneo torneoDeserializzato = (Torneo) DeserializationUtil.deserializeObject(filePath);
            System.out.println("Torneo deserializzato con successo: " + torneoDeserializzato);
        } catch (IOException | ClassNotFoundException e) {
            System.out.println("Errore durante la deserializzazione del torneo: " + e.getMessage());
        }
        // Stampa dei dati del torneo
        System.out.println("Dati del Torneo:");
        System.out.println(t1);

        // Stampiamo il nome dell'atleta che ha vinto il premio in ciascun match
        System.out.println("\nAtleti con il premio:");
        for (Match match : t1.getElencoMatch()) {
            System.out.println(match.getFighter1() + " vs " + match.getFighter2());
            double premio = match.getPremioAtleta();
            System.out.println(match.getFighter1() + " ha vinto un premio di " + premio);
        }

    }
}













/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.mycompany._megaprogetto_galifivalerio;

/**
 *
 * @author Studente
 */
public class RoundException extends Exception 
{
    public RoundException(String message) 
    {
        super(message);
    }
}














